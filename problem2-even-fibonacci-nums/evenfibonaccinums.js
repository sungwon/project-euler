// Problem statement:
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
// find the sum of the even-valued terms.

var CEIL = 4000000;

function sumOfEvenFibonnaciNums (ceiling) {
	// vars to store the current 2 terms
	var current1 = 1, current2 = 2;

	// var to store the sum of the current 2
	var sum_of_prev = 0;
	
	// the sum of even terms found so far
	var total_even_sum = 0; 

	while (current2 < ceiling) {
		// if term is even, add it to the total sum of even terms
		if (current2 % 2 == 0) {
			total_even_sum += current2;
		}

		// iterate the terms 
		sum_of_prev = current1 + current2;
		current1 = current2;
		current2 = sum_of_prev;
	}
	return total_even_sum;
}

console.log(sumOfEvenFibonnaciNums(CEIL));
